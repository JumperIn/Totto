// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyTotto.Data;

namespace MyTotto.Data.Migrations
{
    [DbContext(typeof(TottoContext))]
    partial class TottoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyTotto.Data.Models.Banner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActionDate");

                    b.Property<string>("ButtonText");

                    b.Property<string>("Content");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImageUrl")
                        .IsRequired();

                    b.Property<bool>("IsActive");

                    b.Property<int>("Order");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<string>("Url")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Banners");

                    b.HasData(
                        new { Id = 1, ButtonText = "Заказать доставку", Content = "При заказе на сумму от 300 рублей предоставляем бесплатную доставку в любой район Новосибирска", Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), ImageUrl = "/files/banners/banner-1.jpg", IsActive = true, Order = 10, Title = "Бесплатная доставка", Url = "/promo/akciya-dostavka" },
                        new { Id = 2, ButtonText = "Подписаться", Content = "чтобы узнавать самым первым все последние новости и акции!", Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), ImageUrl = "/files/banners/banner-2.jpg", IsActive = true, Order = 20, Title = "Подпишись на новости", Url = "/promo/akciya-podpiska" },
                        new { Id = 3, ButtonText = "Получить скидку", Content = "Чтобы получить скидку на первый заказ необходимо зарегистрироваться и заполнить анкету первооткрывателя сайта", Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), ImageUrl = "/files/banners/banner-3.jpg", IsActive = true, Order = 15, Title = "Скидка на первый заказ", Url = "/promo/akciya-skidon" }
                    );
                });

            modelBuilder.Entity("MyTotto.Data.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Discount");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Images");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Manufacturer");

                    b.Property<decimal>("Price");

                    b.Property<int>("ProductType");

                    b.Property<string>("Title");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new { Id = new Guid("d36d97d6-9e20-4164-a264-f1dd5ce014c2"), Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Discount = 78.0m, ImageUrl = "/files/products/product-1/card.jpg", IsActive = true, Manufacturer = "ESTHETIC HOUSE", Price = 22.00m, ProductType = 2, Title = "ESTHETIC HOUSE Несмываемая кератиновая сыворотка для волос СР-1 Keratin Silk Injection, 5мл", Url = "/katalog/category-1/subcategory-1/group-1/1" },
                        new { Id = new Guid("54499ffa-a2a4-4e03-837f-2733a8fd3213"), Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Discount = 50.0m, ImageUrl = "/files/products/product-2/card.jpg", IsActive = true, Manufacturer = "ELIZAVECCA", Price = 660.00m, ProductType = 0, Title = "ELIZAVECCA Крем для лица увлажняющий гиалуроновый Aqua Hyaluronic Acid Water Drop Cream, 50 мл", Url = "/katalog/category-1/subcategory-1/group-2/2" },
                        new { Id = new Guid("efd4be76-2634-492c-ba5f-7b586d2bfdd1"), Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Discount = 44.0m, ImageUrl = "/files/products/product-3/card.jpg", IsActive = true, Manufacturer = "ESTHETIC HOUSE", Price = 895.00m, ProductType = 1, Title = "ESTHETIC HOUSE Кондиц.ополас. на основе малинового уксуса CP-1 Rasberry Treatment Vinegar, 500 мл", Url = "/katalog/category-1/subcategory-2/group-1/3" },
                        new { Id = new Guid("a22bd5f7-b7ab-4a16-b70e-a5da78c33b9b"), Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Discount = 35.0m, ImageUrl = "/files/products/product-4/card.jpg", IsActive = true, Manufacturer = "KOELF", Price = 245.00m, ProductType = 3, Title = "KOELF Гидрогелевая маска для лица с жемчугом и маслом Ши Pearl & Shea Butter, 30гр", Url = "/katalog/category-4/subcategory-1/group-4/4" },
                        new { Id = new Guid("5e0676d9-759a-4c47-b6c4-b232a0349da5"), Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Discount = 38.0m, ImageUrl = "/files/products/product-6/card.jpg", IsActive = true, Manufacturer = "THE SAEM", Price = 92.00m, ProductType = 2, Title = "THE SAEM Маска тканевая с экстрактом масла ши Natural Shea Butter Mask Sheet, 21мл", Url = "/katalog/category-2/subcategory-3/group-1/6" },
                        new { Id = new Guid("ad1fb1e8-6d6b-4ae0-9d98-c1f3051afae7"), Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Discount = 0m, ImageUrl = "/files/products/product-7/card.jpg", IsActive = true, Manufacturer = "Innisfree", Price = 120.00m, ProductType = 3, Title = "Innisfree Листовая маска для лица с экстрактом томата My Real Squeeze Mask Tomato", Url = "/katalog/category-3/subcategory-2/group-2/7" }
                    );
                });

            modelBuilder.Entity("MyTotto.Data.Models.Promo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<DateTime>("Created");

                    b.Property<string>("ImageUrl");

                    b.Property<bool>("IsActive");

                    b.Property<int>("Order");

                    b.Property<string>("Title");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Promos");
                });
#pragma warning restore 612, 618
        }
    }
}
